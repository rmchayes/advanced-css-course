/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* universal selector, apply to all elements on page */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* body selector */
body {
  /* inherited by all child elements in the body. Don't put in universal selctor */
  font-family: "Lato", sans-serif; /* Lato google font, else sans-serif */
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh; /* 95% of the viewport */
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0),
      rgba(40, 180, 131, 0.9)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px; /* top and left relative to parent element (header) See html*/
  left: 40px;
}

.logo {
  height: 35px;
  /* width automatically calculated */
}

/* .logo-box:hover .logo {
    animation: moveInRight 1s ease-in;
} */

.text-box {
  position: absolute;
  /* top and left relative to parent element (header) */
  top: 50%;
  left: 50%;
  /* centre the heading box, relative to element itself, not parent*/
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden; /* fix text shake bug?! */
  margin-bottom: 60px; /* helps move down btn */
}

/* inherits from heading-primary */
.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-delay: 0s; /* delay before starting animation */
  animation-duration: 1s;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
}

/* inherits from heading-primary */
.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 18.4px;

  animation-name: moveInRight;
  animation-delay: 0s; /* delay before starting animation */
  animation-duration: 0.8s;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
}

/* animations */
/* moveInLeft is name of animation, not a keyword */
/* for performance reasons try to just change opacity and transform  */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-400px);
  }
  80% {
    transform: translateX(5px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* animations */
/* moveInRight is name of animation, not a keyword */
/* for performance reasons try to just change opacity and transform  */
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(400px);
  }
  /* 80% {
    opacity: 0.3;
    transform: translateX(80px);
  }
  90% {
    opacity: 0.4;
    transform: translateX(20px);
  } */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* animations */
/* moveInBottom is name of animation, not a keyword */
/* for performance reasons try to just change opacity and transform  */
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(+300px);
  }
  /* 80% {
      transform: translateY(-5px);
    } */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

/* pseudo class "link" is a special state of a selector */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none; /* get rid of default link underline */
  padding: 15px 40px; /* top bottom 15px, left right 40px */
  padding: 15px 40px 15px 40px; /* alternatively top right bottom left */
  display: inline; /* inline is default */
  display: inline-block; /* use inline-block instead */
  border-radius: 100px;
  transition: all 0.2s;
  position: relative;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.4); /* x, y, blur, shadow */
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

/* btn clicked */
.btn:active {
  /* -1 relative to the btn:link state, not btn:hover */
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.4); /* x, y, blur, shadow */
}

.btn-white {
  background-color: #fff;
  color: #777;
}

/* after pseudo element */
.btn-white::after {
  background-color: white;
}

.btn-animated {
  animation-name: moveInBottom, fadeIn;
  animation-duration: 1s, 3s;
  animation-fill-mode: backwards, backwards;
  animation-timing-function: ease-out;
}

/* after pseudo element */
.btn::after {
  content: ""; /* must always include content keyword, even if empty */
  display: inline-block; /* should be same as btn:link*/
  height: 100%;
  width: 100%;
  border-radius: 100px;
  /* abolute positioning needs to have a reference. That reference is the first relative element it can find. In this case it would be the header (see html for hierarchy) but we don't want it to be the header. We want it to be hidden after the button, so the reference should be the button. Therefore we have to set the position property of the button to relative. (see btn:link) */

  position: absolute;
  top: 0;
  left: 0;
  z-index: -1; /* depth of elements, negative is lower in the layer */
  transition: all 0.4s;
}
